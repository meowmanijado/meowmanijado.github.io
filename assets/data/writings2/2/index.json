{"hash":"4e8d6a523acb0a380e682d7db05514b5e86cf0a4","data":{"posts":{"totalCount":14,"pageInfo":{"totalPages":3,"currentPage":2},"edges":[{"node":{"id":"62e386980b05143e7fac95fa2d49f0de","title":"🔥 TIL: Versioning / Cache Busting","timeToRead":1,"datetime":"2020-02-10 00:00:00","content":"<p>Normally when I want to see the the changes on my compiled assests, I usually add console.log on JS and change the color of the background on CSS.</p>\n<p>Gladly, I found out that there is method versionon Laravel Mix where it will automatocally append a unique hash to the filenames of all compiled files.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">mix.js('resources/js/app.js', 'public/js')</span>\n<span style=\"color: #24292EFF\">    .version();</span></code></pre>\n<p>Make sure to use the Laravel's gloabal mix function within your views to load the appropriately hashed asset. The mix function will automatically determine the current name of the hashed file:</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">&lt;</span><span style=\"color: #22863A\">script</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">src</span><span style=\"color: #24292EFF\">=</span><span style=\"color: #22863A\">\"{{ mix('/js/app.js') }}\"</span><span style=\"color: #24292EFF\">&gt;&lt;/</span><span style=\"color: #22863A\">script</span><span style=\"color: #24292EFF\">&gt;</span></code></pre>\n<p>See more reference to <a href=\"https://laravel.com/docs/6.x/mix#versioning-and-cache-busting\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://laravel.com/docs/6.x/mix#versioning-and-cache-busting</a></p>\n","excerpt":"","description":"","path":"/til-versioning-cache-busting/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"}],"author":null}},{"node":{"id":"c91b9e72acfda96f8084f4f65ac310de","title":"🔥 TIL: Networking Basics","timeToRead":1,"datetime":"2020-02-10 00:00:00","content":"<p>I had a conversation with a friend about their architectural structure on his work, and he mentioned the word <strong>websocket</strong>. I believe I have encoutered this word many times and I used it on one of my projects but still I don't have the full grasp idea of what is it doing.</p>\n<p>Reference to <a href=\"https://dev.to/iwilsonq/build-real-time-apps-by-learning-websockets-3c9m\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dev.to/iwilsonq/build-real-time-apps-by-learning-websockets-3c9m</a></p>\n<p><strong>Socket</strong> - A <strong>TCP (Transmission Control Protocol) Socket</strong> is and endpint instance defined by the combination of IP address with a port, in the context of either a listening state (a server) or a particular TCP Connection (a client, like your browser).</p>\n<p><strong>TCP Connection</strong> - pairing of two sockets.</p>\n<p><strong>3 main kinds of transports commonly use in browser web apps</strong></p>\n<ul>\n<li><strong>XMLHTTPRequests</strong>, or just HTTP for short. Send a single request and get a single response. These are pretty common</li>\n<li><strong>Server-Sent Events</strong>, or SSE. Send a long-lived request and be able to stream data from the server. Great for real-time data streaming, particularly when the client doesn't need to send messages back to the server.</li>\n<li><strong>WebSockets</strong>, the only transport that allows for bidirectional streaming of text and binary data. We'll dive a little further into it.</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ApzTu2NN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/47j90glrwxk8dv2perdp.png\"></p>\n<p>In most tutorials that deal with external data, you'll deal with the left-most paradigm's HTTP requests. Actually, all of these flows are initiated with an HTTP request, as shown by the blue arrows.</p>\n<p>I don't commonly see articles or tutorials on SSE, but MDN has a good reference in case a one-way data stream sounds intriguing.</p>\n<p>The third flow is most interesting to us - it gives us the ability to communicate with the server over a single long-lived connection.</p>\n<p><strong>Use Cases for websockets</strong></p>\n<ol>\n<li>Social feeds</li>\n<li>Multiplayer Games</li>\n<li>Collaborative Editing/Coding</li>\n<li>Multimedia Chat</li>\n</ol>\n","excerpt":"","description":"","path":"/til-networking-basics/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"Networking","title":"Networking","path":"/tag/Networking/"},{"id":"Websockets","title":"Websockets","path":"/tag/Websockets/"}],"author":null}},{"node":{"id":"53c4d1cbd109e1f6b5f662f67f87d406","title":"Debugging 🛠","timeToRead":1,"datetime":"2020-02-01 00:00:00","content":"<p>Learnings from Wes Bos Course 😎</p>\n<p>You can select the element stack then go to console and call it using <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">$0</code></p>\n","excerpt":"","description":"","path":"/debugging/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"}],"author":{"id":"meow","title":"meow","path":"/author/meow/"}}},{"node":{"id":"fd2a6a32451e688cf1fcff21755b250f","title":"Different ways to declare Function in JS","timeToRead":1,"datetime":"2020-01-25 00:00:00","content":"<p>This is a collection of learnings from Wes Bos course. 👌</p>\n<p><strong>Regular Function</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Anon or Anonymous Function</strong></p>\n<p>Function without a name.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Function Expression</strong></p>\n<p>Function in a variable name.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Hoisting</strong></p>\n<p>Any function declaration can run before it’s define.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">// Working</span>\n<span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(‘wes’);</span>\n<span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span>\n\n<span style=\"color: #6A737D\">//Not Working</span>\n<span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(‘wes’);</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Arrow Function</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">// Regular Declaration</span>\n<span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\">(inches) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> cm </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> cm;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #6A737D\">// Arrow Function Declaration</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (inches) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">// Explicit return </span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6A737D\">// Implicit return, possible to remove the parenthesi if only one parameter</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6A737D\">// Implicit return, if more than one parameter</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (a, b </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">3</span><span style=\"color: #24292EFF\">) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> a </span><span style=\"color: #D32F2F\">+</span><span style=\"color: #24292EFF\"> b;</span></code></pre>\n<p><strong>Return an object</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">makeABaby</span><span style=\"color: #24292EFF\">(first, last) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> baby </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">    name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`</span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">first</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\"> </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">last</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">,</span>\n<span style=\"color: #24292EFF\">    age</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">0</span>\n<span style=\"color: #24292EFF\">  }</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> baby;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">makeABaby</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (first, last) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\">  ({  name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`</span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">first</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\"> </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">last</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">,  age</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">0</span><span style=\"color: #24292EFF\">  })</span></code></pre>\n<p><strong>IIFE - Immediately Invoked Function Expression</strong></p>\n<p>In JS parenthesis runs first by putting parenthesis in the end.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">(</span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #1976D2\">console</span><span style=\"color: #24292EFF\">.</span><span style=\"color: #1976D2\">log</span><span style=\"color: #24292EFF\">(‘Running the Anon </span><span style=\"color: #1976D2\">Function</span><span style=\"color: #24292EFF\">’)</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> ‘You are cool’;</span>\n<span style=\"color: #24292EFF\">})();</span>\n<span style=\"color: #6A737D\">// If there are any parameters</span>\n<span style=\"color: #24292EFF\">(</span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">(age) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`You are cool </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">age</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">})(</span><span style=\"color: #1976D2\">10</span><span style=\"color: #24292EFF\">);</span></code></pre>\n<p><strong>Methods!!! is simply a function that lives inside of an object</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> wes </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">  name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> ‘wes’,</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">sayHi</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> ‘Hey Wes’</span>\n<span style=\"color: #24292EFF\">  },</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">//shorthand</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">yellHi</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #1976D2\">console</span><span style=\"color: #24292EFF\">.</span><span style=\"color: #1976D2\">log</span><span style=\"color: #24292EFF\">(‘HEY WESSS’)</span>\n<span style=\"color: #24292EFF\">  },</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">// Arrow function</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">wisperHi</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> () </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">    consoles.</span><span style=\"color: #6F42C1\">log</span><span style=\"color: #24292EFF\">(‘hi wess </span><span style=\"color: #D32F2F\">in</span><span style=\"color: #24292EFF\"> a mouse’);</span>\n<span style=\"color: #24292EFF\">  }</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Callback Functions</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">//Click callback</span>\n<span style=\"color: #24292EFF\">&lt;</span><span style=\"color: #22863A\">button</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">class</span><span style=\"color: #24292EFF\">=“clickme”&gt;Click me&lt;/button&gt;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6F42C1\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">button</span><span style=\"color: #24292EFF\"> = document.querySelector(‘.clickme’)</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">button.addEventListener(‘click’, wes.yellHi);</span></code></pre>\n<hr>\n","excerpt":"","description":"","path":"/different-ways-to-declare-function-in-js/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"JS","title":"JS","path":"/tag/JS/"}],"author":{"id":"meow","title":"meow","path":"/author/meow/"}}},{"node":{"id":"3b9a1d89581d7f1ac3717dcdf7bf7c2f","title":"📚 For one more day by Mitch Albom","timeToRead":1,"datetime":"2020-01-20 00:00:00","content":"\n","excerpt":"","description":"","path":"/for-one-more-day-by-mitch-albom/","cover":"","tags":[{"id":"Books","title":"Books","path":"/tag/Books/"}],"author":null}},{"node":{"id":"c88df58eeed7f9484438d9faf5dcaf54","title":"TIBS","timeToRead":1,"datetime":"2019-06-20 00:00:00","content":"<p>TIBS is a Barangay System tool to manage residents identity and secure information.\n<img src=\"/images/posts/TIBS.png\" alt=\"TIBS\"></p>\n","excerpt":"","description":"Barangay ID system tool for residents management and ID printing.","path":"/tibs/","cover":"https://raw.githubusercontent.com/meowmanijado/meowmanijado.github.io/develop/static/images/posts/TIBS.png","tags":[{"id":"projects","title":"projects","path":"/tag/projects/"}],"author":{"id":"meow","title":"meow","path":"/author/meow/"}}}]}},"context":{}}