{"hash":"8db8457d91462f5d81609a766a0453648db1f490","data":{"author":{"id":"meow","title":"meow","path":"/author/meow/","belongsTo":{"totalCount":5,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"cc1ec118095316992a3037ee5200fb32","title":"Tinybuds Baby","datetime":"2020-04-16 00:00:00","path":"/tinybuds-baby/","content":"<p>Tinybuds is an online shop selling natural products for babies.</p>\n<p>This is one of the projects I am really happy and proud of. I've started to collaborate with them since 2016, I created\na eCommerce site back then using <strong>WordPress and WooCommerce</strong>. Early 2018 they want to transfer the shop to <strong>Shopify</strong>, because\nthey find it more user friendly and focused on selling.</p>\n<p>I've set-up their store from the start, from store account, theme and importing the products and reviews from wordpress data.\nSince then, I am the maintainer and consultant of their ecommerce store, updating the site information, products, searching\nand finding a ways that can boost sales and customer experience. </p>\n<p>I can say that with collaboration with them, I grew more on business strategy and customer relationship, especially in ecommerce. I might\nhave no actual contact with their customers but I can see their experience and behaviour through using the store and with that I could improve\nand build better experience for the customer and my client.</p>\n","excerpt":"","description":"","timeToRead":1,"tags":[{"id":"projects","title":"projects","path":"/tag/projects/"},{"id":"ecommerce","title":"ecommerce","path":"/tag/ecommerce/"},{"id":"shopify","title":"shopify","path":"/tag/shopify/"},{"id":"wordpress","title":"wordpress","path":"/tag/wordpress/"},{"id":"woocommerce","title":"woocommerce","path":"/tag/woocommerce/"}]}},{"node":{"id":"288b475823f665dbb98935a28a023053","title":"Setting up Laravel with AWS EC2 and RDS","datetime":"2020-03-14 00:00:00","path":"/setting-up-laravel-with-aws-e-c2-and-rds/","content":"<p><em>Note: This is not an how to ultimate guide, it's my personal documentation how I manage to set this up and for future cheatsheet.</em></p>\n<h5 id=\"prerequisite\"><a href=\"#prerequisite\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prerequisite</h5>\n<hr>\n<ul>\n<li>AWS Fre Tier account</li>\n<li>Laravel Project Repository</li>\n</ul>\n<h3 id=\"set-up-aws-ec2\"><a href=\"#set-up-aws-ec2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set-up AWS EC2</h3>\n<hr>\n<p>Elastic Compute Cloud or EC2 is basically our vitual computers where we create, launch and terminate the server-instances.</p>\n<ol>\n<li>Create EC2 instance</li>\n<li>Select (Free tier eligible) Ubuntu Server 18.04 LTS (HVM), SSD Volume Type</li>\n<li>Select Next Configure Security Group</li>\n<li>Select Type: HTTP; Port Range 80</li>\n<li>I use key pair for additional security</li>\n</ol>\n<blockquote>\n<p>A key pair consists of a public key that AWS stores, and a private key file that you store. Together, they allow you to connect to your instance securely. For Windows AMIs, the private key file is required to obtain the password used to log into your instance. For Linux AMIs, the private key file allows you to securely SSH into your instance.</p>\n</blockquote>\n<!-- -->\n<blockquote>\n<p>You have to download the private key file (*.pem file) before you can continue. Store it in a secure and accessible location. You will not be able to download the file again after it's created.</p>\n</blockquote>\n<p>Once the instance already created, you can now access the server using ssh</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">ssh ubuntu@1xx.xx.xx.xxx -i </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/document-path-of-pem-file.pem</span></code></pre>\n<h5 id=\"installing-nginx\"><a href=\"#installing-nginx\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing Nginx</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo apt update</span>\n<span style=\"color: #24292EFF\">sudo apt install nginx</span></code></pre>\n<p>Checking web server</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">systemctl status nginx</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">Output</span>\n<span style=\"color: #24292EFF\">● nginx.service - A high performance web server and a reverse proxy server</span>\n<span style=\"color: #24292EFF\">   Loaded: loaded (/lib/systemd/system/nginx.service</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> enabled</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> vendor preset: enabled)</span>\n<span style=\"color: #24292EFF\">   Active: active (running) since Fri 2018-04-20 16:08:19 UTC</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> 3 days ago</span>\n<span style=\"color: #24292EFF\">     Docs: man:nginx(8)</span>\n<span style=\"color: #24292EFF\"> Main PID: 2369 (nginx)</span>\n<span style=\"color: #24292EFF\">    Tasks: 2 (limit: 1153)</span>\n<span style=\"color: #24292EFF\">   CGroup: /system.slice/nginx.service</span>\n<span style=\"color: #24292EFF\">           ├─2369 nginx: master process /usr/sbin/nginx -g daemon on</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> master_process on</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">           └─2380 nginx: worker process</span></code></pre>\n<p>Now Nginx appears starterd successfully.</p>\n<p>To check on the browser, call the public IP address that you can get on the instance page, then you can see the Welcome to NGINX!</p>\n<p>For more detailed instruction I followed this tutorial:</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04</a></p>\n<p>✏️ <em>Note to self: Write Nginx cheatsheet for my future self!</em></p>\n<h5 id=\"installing-php\"><a href=\"#installing-php\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing PHP</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo apt install php-fpm php-mysql</span>\n<span style=\"color: #24292EFF\">sudo apt install php7.4-mbstring php7.4-xmlrpc php7.4-soap php7.4-gd php7.4-xml php7.4-cli php7.4-zip</span></code></pre>\n<h5 id=\"configure-ssh\"><a href=\"#configure-ssh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure SSH</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">$ ssh-key-gen</span>\n<span style=\"color: #24292EFF\">$ cat </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/.ssh/id_rsa.pub</span></code></pre>\n<p>Other resources I followed to set-up SSH:</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604</a></p>\n<p><a href=\"https://help.github.com/en/github/authenticating-to-github/error-permission-denied-publickey\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://help.github.com/en/github/authenticating-to-github/error-permission-denied-publickey</a></p>\n<h5 id=\"installing-composer\"><a href=\"#installing-composer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing composer</h5>\n<p><a href=\"https://linuxize.com/post/how-to-install-and-use-composer-on-ubuntu-18-04/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://linuxize.com/post/how-to-install-and-use-composer-on-ubuntu-18-04/</a></p>\n<h5 id=\"configuring-nginx-to-use-the-php-processor\"><a href=\"#configuring-nginx-to-use-the-php-processor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configuring Nginx to Use the PHP Processor</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nano /etc/nginx/sites-available/spartan</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">server {</span>\n<span style=\"color: #24292EFF\">        listen 80</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        root /var/www/html</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        index index.php index.html index.htm index.nginx-debian.html</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        server_name example.com</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location / {</span>\n<span style=\"color: #24292EFF\">                try_files $uri $uri/ =404</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\"> \\.php$ {</span>\n<span style=\"color: #24292EFF\">                include snippets/fastcgi-php.conf</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\"> /\\.ht {</span>\n<span style=\"color: #24292EFF\">                deny all</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p>Now enable your new server block by creating a symbolic link from your new server block configuration file in the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/etc/nginx/sites-available/ directory</code> to the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/etc/nginx/sites-enabled/</code> directory:</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo ln -s /etc/nginx/sites-available/spartan /etc/nginx/sites-enabled/</span></code></pre>\n<p>To test your new configuration</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nginx -t</span></code></pre>\n<p>Reload NGINX to make the necessary changes</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo servince nginx restart</span></code></pre>\n<p>To test in the browser, create PHP file wit phpinfo();</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nano /var/www/spartan/test.php </span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">&lt;?php</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #1976D2\">echo</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">phpinfo</span><span style=\"color: #24292EFF\">();</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">?&gt;</span></code></pre>\n<p>It should display the PHP info.</p>\n<h3 id=\"set-up-aws-rds\"><a href=\"#set-up-aws-rds\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set-up AWS RDS</h3>\n<hr>\n<p><a href=\"https://linuxacademy.com/guide/15653-using-aws-rds-with-laravel-october-cms/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://linuxacademy.com/guide/15653-using-aws-rds-with-laravel-october-cms/</a></p>\n<h5 id=\"installing-mysql\"><a href=\"#installing-mysql\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing MySQL</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">apt install php7.4-mysql</span></code></pre>\n<p>Debugging links:</p>\n<p><a href=\"https://stackoverflow.com/questions/41147609/unable-to-start-the-mysql-server-in-ubuntu\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/41147609/unable-to-start-the-mysql-server-in-ubuntu</a></p>\n<p><a href=\"https://stackoverflow.com/questions/37212945/aws-cant-connect-to-rds-database-from-my-machine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/37212945/aws-cant-connect-to-rds-database-from-my-machine</a></p>\n","excerpt":"","description":"","timeToRead":3,"tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"AWS","title":"AWS","path":"/tag/AWS/"},{"id":"RDS","title":"RDS","path":"/tag/RDS/"},{"id":"EC2","title":"EC2","path":"/tag/EC2/"},{"id":"Laravel","title":"Laravel","path":"/tag/Laravel/"}]}},{"node":{"id":"fd2a6a32451e688cf1fcff21755b250f","title":"Different ways to declare Function in JS","datetime":"2020-01-25 00:00:00","path":"/different-ways-to-declare-function-in-js/","content":"<p>This is a collection of learnings from Wes Bos course. 👌</p>\n<p><strong>Regular Function</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Anon or Anonymous Function</strong></p>\n<p>Function without a name.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Function Expression</strong></p>\n<p>Function in a variable name.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Hoisting</strong></p>\n<p>Any function declaration can run before it’s define.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">// Working</span>\n<span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(‘wes’);</span>\n<span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span>\n\n<span style=\"color: #6A737D\">//Not Working</span>\n<span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(‘wes’);</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Arrow Function</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">// Regular Declaration</span>\n<span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\">(inches) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> cm </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> cm;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #6A737D\">// Arrow Function Declaration</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (inches) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">// Explicit return </span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6A737D\">// Implicit return, possible to remove the parenthesi if only one parameter</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6A737D\">// Implicit return, if more than one parameter</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (a, b </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">3</span><span style=\"color: #24292EFF\">) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> a </span><span style=\"color: #D32F2F\">+</span><span style=\"color: #24292EFF\"> b;</span></code></pre>\n<p><strong>Return an object</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">makeABaby</span><span style=\"color: #24292EFF\">(first, last) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> baby </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">    name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`</span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">first</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\"> </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">last</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">,</span>\n<span style=\"color: #24292EFF\">    age</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">0</span>\n<span style=\"color: #24292EFF\">  }</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> baby;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">makeABaby</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (first, last) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\">  ({  name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`</span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">first</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\"> </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">last</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">,  age</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">0</span><span style=\"color: #24292EFF\">  })</span></code></pre>\n<p><strong>IIFE - Immediately Invoked Function Expression</strong></p>\n<p>In JS parenthesis runs first by putting parenthesis in the end.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">(</span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #1976D2\">console</span><span style=\"color: #24292EFF\">.</span><span style=\"color: #1976D2\">log</span><span style=\"color: #24292EFF\">(‘Running the Anon </span><span style=\"color: #1976D2\">Function</span><span style=\"color: #24292EFF\">’)</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> ‘You are cool’;</span>\n<span style=\"color: #24292EFF\">})();</span>\n<span style=\"color: #6A737D\">// If there are any parameters</span>\n<span style=\"color: #24292EFF\">(</span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">(age) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`You are cool </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">age</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">})(</span><span style=\"color: #1976D2\">10</span><span style=\"color: #24292EFF\">);</span></code></pre>\n<p><strong>Methods!!! is simply a function that lives inside of an object</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> wes </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">  name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> ‘wes’,</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">sayHi</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> ‘Hey Wes’</span>\n<span style=\"color: #24292EFF\">  },</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">//shorthand</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">yellHi</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #1976D2\">console</span><span style=\"color: #24292EFF\">.</span><span style=\"color: #1976D2\">log</span><span style=\"color: #24292EFF\">(‘HEY WESSS’)</span>\n<span style=\"color: #24292EFF\">  },</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">// Arrow function</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">wisperHi</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> () </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">    consoles.</span><span style=\"color: #6F42C1\">log</span><span style=\"color: #24292EFF\">(‘hi wess </span><span style=\"color: #D32F2F\">in</span><span style=\"color: #24292EFF\"> a mouse’);</span>\n<span style=\"color: #24292EFF\">  }</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Callback Functions</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">//Click callback</span>\n<span style=\"color: #24292EFF\">&lt;</span><span style=\"color: #22863A\">button</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">class</span><span style=\"color: #24292EFF\">=“clickme”&gt;Click me&lt;/button&gt;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6F42C1\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">button</span><span style=\"color: #24292EFF\"> = document.querySelector(‘.clickme’)</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">button.addEventListener(‘click’, wes.yellHi);</span></code></pre>\n<hr>\n","excerpt":"","description":"","timeToRead":1,"tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"JS","title":"JS","path":"/tag/JS/"}]}},{"node":{"id":"787ce1e9bd91a0095843420b92cf251e","title":"Plug It","datetime":"2019-06-20 00:00:00","path":"/plug-it/","content":"<p>Plug It is a co-working space &#x26; Studio hub for working professionals and university students. </p>\n<p>My friend Chan and ex-colleague has started a business in line of co-working space, he contacted me to\ncreate a system to monitor their daily sales. I'm quite exited about it, this is my first time to create a real-life\nsystem other than ToDo apps, and a successful project built in Laravel.</p>\n<p><strong>Functional Requirements</strong></p>\n<ul>\n<li>Monitor Time In/Out of customers</li>\n<li>Subscriptions (Yearly, Monthly, Weekly)</li>\n<li>Calculate total payment</li>\n<li>Real-time view of current customers</li>\n</ul>\n<p><strong>Challenge</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">/**</span>\n<span style=\"color: #24292EFF\">* Get the current shift of the office hours.</span>\n<span style=\"color: #24292EFF\">*</span>\n<span style=\"color: #24292EFF\">* Since the office's shift is between two days (12pm - 6am),</span>\n<span style=\"color: #24292EFF\">* we have to use the current time to determine what the shift is.</span>\n<span style=\"color: #24292EFF\">*</span>\n<span style=\"color: #24292EFF\">* @return string</span>\n<span style=\"color: #24292EFF\">*/</span>\n\n<span style=\"color: #24292EFF\">private static function shift()</span>\n<span style=\"color: #24292EFF\">{</span>\n<span style=\"color: #24292EFF\">    $now = now()-&gt;setTime(11, 0, 0);</span>\n\n<span style=\"color: #24292EFF\">    /**</span>\n<span style=\"color: #24292EFF\">        * If the current time is before 12pm, then we'll assume we're</span>\n<span style=\"color: #24292EFF\">        * still supposed to be looking at yesterday's transactions.</span>\n<span style=\"color: #24292EFF\">        */</span>\n<span style=\"color: #24292EFF\">    if (now()-&gt;format('H') &lt; 11) {</span>\n<span style=\"color: #24292EFF\">        $now-&gt;subDays(1);</span>\n<span style=\"color: #24292EFF\">    }</span>\n\n<span style=\"color: #24292EFF\">    return $now-&gt;format('Y-m-d H:i:s');</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Other stuff I Learned</strong></p>\n<p>I have'nt experienced deploying a Laravel app before, gladly the internet is\ngenerous in resources, also, the app needs to be deployed locally but the thing\nis Chan wants to accessed the system anywhere</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">php artisan serve --host 192.168.1.12 --port 80</span></code></pre>\n<p><em>Note: Change the host based on your IP Address</em></p>\n<p>I feel like I have so many stuffs I need to improve, <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">eloquent</code> , <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">queries</code>, better model\nstructure and a lot more, but I'm pretty happy with the result, knowing that they actually using\nit and the client is happy about it.</p>\n<hr>\n","excerpt":"","description":"Coworking System","timeToRead":1,"tags":[{"id":"projects","title":"projects","path":"/tag/projects/"},{"id":"laravel","title":"laravel","path":"/tag/laravel/"},{"id":"vue","title":"vue","path":"/tag/vue/"},{"id":"tailwind","title":"tailwind","path":"/tag/tailwind/"}]}},{"node":{"id":"c88df58eeed7f9484438d9faf5dcaf54","title":"TIBS","datetime":"2019-06-20 00:00:00","path":"/tibs/","content":"<p>TIBS is a Barangay System tool to manage residents identity and secure information.</p>\n<p><strong>The system is quite basic:</strong></p>\n<ul>\n<li>Save the resident information</li>\n<li>Print ID of the resident</li>\n</ul>\n<p>That's it!</p>\n<p>What I want to cover in this blog is what I unexpected to learn, <strong>communication</strong>.</p>\n<p>Most of the developers, working in a company with a hierarchy, they do the task on bullet basis, this is no exemption of me.\nI'm used to getting the task list and do the coding quick. It gives me more time to think on the code rather than on the\ndomain itself.</p>\n<p>Hence, I got the project with do this, do that, worst is it's just given verbally. Until the project became bulky, there are\nfeatures that the client did'nt want to have in the first place.</p>\n<p><strong>Here's the list of what I did:</strong></p>\n<ul>\n<li>Taking ID picture thru webcam (The client wanted it uploadable instead)</li>\n<li>Fingerprint Scanner (The client doesn't need this)</li>\n<li>API of resident info for the mobile app (I don't know what's this for, I bet the client is not aware on this)</li>\n</ul>\n<p>Now, the most important thing that did'nt addressed on the early stage: <strong>THE ID PRINTER!</strong></p>\n<p>It's hard to test if we don't have a printer. So the company have decided to bought a ID Printer on the last minute before the deadline. I went a lot of test prints,\npvc cards, and overtime work. </p>\n<p>That was the moment I learned that communication is really vital, if I could have ask the manager\nbefore the project start what is the main purpose of the system, what are the pain points of the client, why we are builiding this, not just getting the task list. If I think beyond the code,\nand get the real purpose, I could lessen the development time and ship the core features of the system early. I learned it\nthe hard way. Never neglect communicating, personally I have tend to focus on the code because \"I'm a programmer\", but coding\nis more than just a code, it is way of communicating to other people, yet in terms of code.</p>\n","excerpt":"","description":"Barangay ID system tool for residents management and ID printing.","timeToRead":2,"tags":[{"id":"projects","title":"projects","path":"/tag/projects/"},{"id":"laravel","title":"laravel","path":"/tag/laravel/"},{"id":"vue","title":"vue","path":"/tag/vue/"},{"id":"tailwind","title":"tailwind","path":"/tag/tailwind/"}]}}]}}},"context":{}}