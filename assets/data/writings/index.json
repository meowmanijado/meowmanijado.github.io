{"hash":"11b2d22759621e01cdff2459617094ece847867a","data":{"posts":{"totalCount":12,"pageInfo":{"totalPages":2,"currentPage":1},"edges":[{"node":{"id":"a3ea3f91ffdf920421a0d229592ae70d","title":"Uses","timeToRead":1,"datetime":"2020-05-04 00:00:00","content":"<p>I wrote this thing in case I messed up my machine (which is always happens to me 😓). I'm using MacBook Pro (Retina, 13-inch, Early 2015)\nwith 23\" AOC I2781FH Full HD IPS.</p>\n<h3 id=\"desktop-apps\"><a href=\"#desktop-apps\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Desktop Apps</h3>\n<ul>\n<li><a href=\"https://www.iterm2.com/\">iTerm2</a></li>\n<li>Alfred - replacement for spotlight</li>\n<li>Visual Studio Code - editor</li>\n<li>Slack for communication</li>\n<li><a href=\"https://postgresapp.com/downloads.html\">PostgreSQL</a></li>\n<li>Todoist</li>\n<li>Typora Markdown Editor</li>\n</ul>\n<h3 id=\"terminal\"><a href=\"#terminal\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Terminal</h3>\n<ul>\n<li>I use iTerm2 and <a href=\"https://github.com/ohmyzsh/ohmyzsh\">oh-my-zsh</a> a great combination for terminal!</li>\n<li>I use the theme SpaceGray</li>\n<li><a href=\"https://github.com/IBM/plex\">IBM Plex Mono Thin</a> for font</li>\n</ul>\n<h3 id=\"homebrew\"><a href=\"#homebrew\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Homebrew</h3>\n<p>To install PHP, MariaDB and other package I need for development. <a href=\"https://brew.sh/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://brew.sh/</a></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">// PHP</span>\n<span style=\"color: #24292EFF\">brew install php</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">// MariaDB</span>\n<span style=\"color: #24292EFF\">brew install mariadb</span>\n<span style=\"color: #24292EFF\">brew services start mariadb</span></code></pre>\n<h3 id=\"composer\"><a href=\"#composer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Composer</h3>\n<p>Dependency Manager for PHP. <a href=\"https://getcomposer.org/download/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://getcomposer.org/download/</a></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">// Once the composer has been successfully installed, you can now access composer using</span>\n<span style=\"color: #24292EFF\">php composer.phar</span>\n\n<span style=\"color: #24292EFF\">// To create a shortcut </span><span style=\"color: #D32F2F\">for</span><span style=\"color: #24292EFF\"> php composer.phar</span>\n<span style=\"color: #24292EFF\">Get the directory of </span><span style=\"color: #22863A\">`php composer.phar`</span><span style=\"color: #24292EFF\"> and </span><span style=\"color: #D32F2F\">then</span><span style=\"color: #24292EFF\"> move to bin folder</span>\n<span style=\"color: #24292EFF\">mv  /Users/meow/composer.phar /usr/local/bin/composer </span>\n<span style=\"color: #24292EFF\">// After that we can now access the php composer.phar with</span>\n<span style=\"color: #24292EFF\">composer</span>\n\n<span style=\"color: #24292EFF\">// Make sure the </span><span style=\"color: #22863A\">`~/.composer/vendor/bin`</span><span style=\"color: #24292EFF\"> directory is </span><span style=\"color: #D32F2F\">in</span><span style=\"color: #24292EFF\"> your system </span><span style=\"color: #22863A\">\"PATH\"</span>\n<span style=\"color: #24292EFF\">// On </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/.zshconfig edit the </span><span style=\"color: #D32F2F\">export</span><span style=\"color: #24292EFF\"> PATH line</span>\n<span style=\"color: #D32F2F\">export</span><span style=\"color: #24292EFF\"> PATH=$HOME/bin:/usr/local/bin:</span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/.composer/vendor/bin:$PATH</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">https://packagist.org/packages/friendsofphp/php-cs-fixer</span></code></pre>\n<h3 id=\"js-environment\"><a href=\"#js-environment\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JS Environment</h3>\n<ul>\n<li><a href=\"https://nodejs.org/en/download/\">Node</a></li>\n<li>Yarn <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">npm install -g yarn</code></li>\n</ul>\n<h3 id=\"php-environment\"><a href=\"#php-environment\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>PHP Environment</h3>\n<ul>\n<li>I like using <a href=\"https://laravel.com/docs/7.x/valet\">Laravel Valet</a> to configure my NGINX/PHP environment.</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">composer global require laravel/valet</span>\n<span style=\"color: #24292EFF\">valet install</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #1976D2\">cd</span><span style=\"color: #24292EFF\"> code</span>\n<span style=\"color: #24292EFF\">valet park </span></code></pre>\n<h3 id=\"database\"><a href=\"#database\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Database</h3>\n<ul>\n<li>PostgreSQL</li>\n<li>MariaDB/MySQL</li>\n</ul>\n<h4 id=\"vscode-extensions\"><a href=\"#vscode-extensions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>VSCode Extensions</h4>\n<ul>\n<li>Night owl theme</li>\n<li>advanced-new-file - patbenatar</li>\n<li>File Utils - steffen leistner - add duplicate function</li>\n<li>php intelephense - php support</li>\n<li>Laravel Artisan - Ryan Naddy</li>\n<li>PHP cs fixer - junstyle</li>\n<li>friendsofphp/php-cs-fixer</li>\n<li>Vetur - Pine Wu</li>\n<li>ESLint - Dirk Baeumer</li>\n</ul>\n<h4 id=\"ssh-keys--github\"><a href=\"#ssh-keys--github\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SSH Keys &#x26; GitHub</h4>\n<p>github settings >> ssh and gpg keys</p>\n<p><a href=\"https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh</a></p>\n<p>Note: I will add my config settings, aliases, snippets and settings.json here soon!</p>\n","excerpt":"","description":"","path":"/uses/","cover":"","tags":[{"id":"web development","title":"web development","path":"/tag/web%20development/"}],"author":{"id":"meow","title":"meow","path":"/author/meow/"}}},{"node":{"id":"cc1ec118095316992a3037ee5200fb32","title":"Tinybuds Baby","timeToRead":1,"datetime":"2020-04-16 00:00:00","content":"<p>Tinybuds is an online shop selling natural products for babies.</p>\n<p>This is one of the projects I am really happy and proud of. I've started to collaborate with them since 2016, I created\na eCommerce site back then using <strong>WordPress and WooCommerce</strong>. Early 2018 they want to transfer the shop to <strong>Shopify</strong>, because\nthey find it more user friendly and focused on selling.</p>\n<p>I've set-up their store from the start, from store account, theme and importing the products and reviews from wordpress data.\nSince then, I am the maintainer and consultant of their ecommerce store, updating the site information, products, searching\nand finding a ways that can boost sales and customer experience. </p>\n<p>I can say that with collaboration with them, I grew more on business strategy and customer relationship, especially in ecommerce. I might\nhave no actual contact with their customers but I can see their experience and behaviour through using the store and with that I could improve\nand build better experience for the customer and my client.</p>\n","excerpt":"","description":"","path":"/tinybuds-baby/","cover":"https://raw.githubusercontent.com/meowmanijado/meowmanijado.github.io/develop/static/images/posts/tinybuds-homepage.jpg","tags":[{"id":"projects","title":"projects","path":"/tag/projects/"},{"id":"ecommerce","title":"ecommerce","path":"/tag/ecommerce/"},{"id":"shopify","title":"shopify","path":"/tag/shopify/"},{"id":"wordpress","title":"wordpress","path":"/tag/wordpress/"},{"id":"woocommerce","title":"woocommerce","path":"/tag/woocommerce/"}],"author":{"id":"meow","title":"meow","path":"/author/meow/"}}},{"node":{"id":"cd7289a963090e372337e5bd227d0898","title":"📚 Thinking Fast and Slow by Daniel Kahneman","timeToRead":1,"datetime":"2020-04-12 00:00:00","content":"<p>Interesting, how we think as humans, we are easily deceived by the reference point and\nquick duration-neglect. How we often repeat the mistakes of the past, continually fooling\nourselves that we know what we already know without actually thinking.</p>\n<p>Ultimate Takeaway, there's math in Psychology!!</p>\n<p><img src=\"/images/posts/IMG_4341.JPG\"></p>\n","excerpt":"","description":"","path":"/thinking-fast-and-slow-by-daniel-kahneman/","cover":"","tags":[{"id":"Books","title":"Books","path":"/tag/Books/"},{"id":"Psychology","title":"Psychology","path":"/tag/Psychology/"},{"id":"Economics","title":"Economics","path":"/tag/Economics/"}],"author":null}},{"node":{"id":"6963c3d5d938fdcc86f1494416e4f647","title":"📚 The Pragmatic Programmer by Andy Hunt and Dave Thomas","timeToRead":2,"datetime":"2020-03-27 00:00:00","content":"<p>Here are some of the exceprts strike in me on this book.</p>\n<p><strong>What makes a Pragmatic Programmer?</strong></p>\n<ul>\n<li>Easy adopter/fast adapter</li>\n<li>Inquisitive </li>\n<li>You need to ask questions.</li>\n<li>Critical Thinker</li>\n<li>Realistic</li>\n<li>Jack of all trades </li>\n<li>You try to be familiar with a broad range of technologies and environments, and you work to keep abreast of new developments.</li>\n</ul>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">Tip #1\nCare about your craft.</code>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">Tip #2\nThink! About your Work</code>\n<p><strong>Kaizen</strong> is a Japanese term that captures the concept of continuously making many small improvements.</p>\n<p><strong>A Pragmatic Philosophy</strong></p>\n<p>It's an attitude, a style, a philosophy of approaching problems and their solutions. They think beyond the immediate probles, always trying to take place it in its larger context, always trying to be aware of the bigger picture.</p>\n<p>The cat ate my source code\nTake responsibly</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">Tip #3\nProvide Options, Don&#039;t Make Lame Excuses</code>\n<p><strong>Software Entropy</strong></p>\n<p><strong>Entropy</strong> is a term from physics that refers to the amount of \"disorder\" in a system.</p>\n<p><strong>A broken window.</strong></p>\n<p>One broken window, left unrepaired for any substantial length of time, instills in the inhabitants of the building a sense of abandonment-a sense that the powers that be don't care about the building. So another window gets broken. People start littering. Graffiti appears. Serious structural damage begins. In a relatively short space of time, the building becomes damaged beyond the owners's desire to fix it, and the sense of abandonment becomes reality.</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">Tip #4\nDon&#039;t live with broken windows.</code>\n<p><strong>Stone Soup and Boiled Frogs</strong></p>\n<p>Work out what you can reasonably ask for. Develop it well. Once you've got it, show people and let them marve. Then say \"of course, it would be better if we added...\" Pretend it's not important. Sit back and wait for them to start asking you to add the functionality you originally wanted. People find it easier to join an ongoing success. Show them a glimpse of a future and you'll get them to rally about.</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">Tip #5 \nBe a catalyst for change.</code>\n<p><img src=\"/images/posts/IMG_4347.JPG\"></p>\n<p>Sorry, this book is so good that I couldn't put all my highlights here on this page. 😬</p>\n","excerpt":"","description":"","path":"/the-pragmatic-programmer-by-andy-hunt-and-dave-thomas/","cover":"","tags":[{"id":"Books","title":"Books","path":"/tag/Books/"},{"id":"Technical Books","title":"Technical Books","path":"/tag/Technical%20Books/"}],"author":null}},{"node":{"id":"fad553a6c600d0928f8806e991c9f7f1","title":"📚 The Five People You Meet in Heaven by Mitch Albom","timeToRead":1,"datetime":"2020-03-15 00:00:00","content":"<blockquote>\n<p>Ruby stepped toward him, \"Edward,\" she said softly. It was the first time she called him by name. \"Learn this from me. Holding anger is a poison. It eats you from inside. We think that hating is a weapon that attacks the person who harmed us. But hatred is a curved blade. And the harm we do, we do to ourselves.\"</p>\n</blockquote>\n<!-- -->\n<blockquote>\n<p>\"Lost love is still love, Eddie. It takes a different form, that's all. You can't see their smile or bring them food or tousle their hair or move them around a dance floor. But when those senses weaken, another heightens, Memory. Memory becomes your partner. You nurture it. You hold it. You dance with it.\"</p>\n</blockquote>\n","excerpt":"","description":"","path":"/the-five-people-you-meet-in-heaven-by-mitch-albom/","cover":"","tags":[{"id":"Books","title":"Books","path":"/tag/Books/"}],"author":null}},{"node":{"id":"288b475823f665dbb98935a28a023053","title":"Setting up Laravel with AWS EC2 and RDS","timeToRead":3,"datetime":"2020-03-14 00:00:00","content":"<p><em>Note: This is not an how to ultimate guide, it's my personal documentation how I manage to set this up and for future cheatsheet.</em></p>\n<h5 id=\"prerequisite\"><a href=\"#prerequisite\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prerequisite</h5>\n<hr>\n<ul>\n<li>AWS Fre Tier account</li>\n<li>Laravel Project Repository</li>\n</ul>\n<h3 id=\"set-up-aws-ec2\"><a href=\"#set-up-aws-ec2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set-up AWS EC2</h3>\n<hr>\n<p>Elastic Compute Cloud or EC2 is basically our vitual computers where we create, launch and terminate the server-instances.</p>\n<ol>\n<li>Create EC2 instance</li>\n<li>Select (Free tier eligible) Ubuntu Server 18.04 LTS (HVM), SSD Volume Type</li>\n<li>Select Next Configure Security Group</li>\n<li>Select Type: HTTP; Port Range 80</li>\n<li>I use key pair for additional security</li>\n</ol>\n<blockquote>\n<p>A key pair consists of a public key that AWS stores, and a private key file that you store. Together, they allow you to connect to your instance securely. For Windows AMIs, the private key file is required to obtain the password used to log into your instance. For Linux AMIs, the private key file allows you to securely SSH into your instance.</p>\n</blockquote>\n<!-- -->\n<blockquote>\n<p>You have to download the private key file (*.pem file) before you can continue. Store it in a secure and accessible location. You will not be able to download the file again after it's created.</p>\n</blockquote>\n<p>Once the instance already created, you can now access the server using ssh</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">ssh ubuntu@1xx.xx.xx.xxx -i </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/document-path-of-pem-file.pem</span></code></pre>\n<h5 id=\"installing-nginx\"><a href=\"#installing-nginx\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing Nginx</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo apt update</span>\n<span style=\"color: #24292EFF\">sudo apt install nginx</span></code></pre>\n<p>Checking web server</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">systemctl status nginx</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">Output</span>\n<span style=\"color: #24292EFF\">● nginx.service - A high performance web server and a reverse proxy server</span>\n<span style=\"color: #24292EFF\">   Loaded: loaded (/lib/systemd/system/nginx.service</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> enabled</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> vendor preset: enabled)</span>\n<span style=\"color: #24292EFF\">   Active: active (running) since Fri 2018-04-20 16:08:19 UTC</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> 3 days ago</span>\n<span style=\"color: #24292EFF\">     Docs: man:nginx(8)</span>\n<span style=\"color: #24292EFF\"> Main PID: 2369 (nginx)</span>\n<span style=\"color: #24292EFF\">    Tasks: 2 (limit: 1153)</span>\n<span style=\"color: #24292EFF\">   CGroup: /system.slice/nginx.service</span>\n<span style=\"color: #24292EFF\">           ├─2369 nginx: master process /usr/sbin/nginx -g daemon on</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> master_process on</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">           └─2380 nginx: worker process</span></code></pre>\n<p>Now Nginx appears starterd successfully.</p>\n<p>To check on the browser, call the public IP address that you can get on the instance page, then you can see the Welcome to NGINX!</p>\n<p>For more detailed instruction I followed this tutorial:</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04</a></p>\n<p>✏️ <em>Note to self: Write Nginx cheatsheet for my future self!</em></p>\n<h5 id=\"installing-php\"><a href=\"#installing-php\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing PHP</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo apt install php-fpm php-mysql</span>\n<span style=\"color: #24292EFF\">sudo apt install php7.4-mbstring php7.4-xmlrpc php7.4-soap php7.4-gd php7.4-xml php7.4-cli php7.4-zip</span></code></pre>\n<h5 id=\"configure-ssh\"><a href=\"#configure-ssh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure SSH</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">$ ssh-key-gen</span>\n<span style=\"color: #24292EFF\">$ cat </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/.ssh/id_rsa.pub</span></code></pre>\n<p>Other resources I followed to set-up SSH:</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604</a></p>\n<p><a href=\"https://help.github.com/en/github/authenticating-to-github/error-permission-denied-publickey\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://help.github.com/en/github/authenticating-to-github/error-permission-denied-publickey</a></p>\n<h5 id=\"installing-composer\"><a href=\"#installing-composer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing composer</h5>\n<p><a href=\"https://linuxize.com/post/how-to-install-and-use-composer-on-ubuntu-18-04/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://linuxize.com/post/how-to-install-and-use-composer-on-ubuntu-18-04/</a></p>\n<h5 id=\"configuring-nginx-to-use-the-php-processor\"><a href=\"#configuring-nginx-to-use-the-php-processor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configuring Nginx to Use the PHP Processor</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nano /etc/nginx/sites-available/spartan</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">server {</span>\n<span style=\"color: #24292EFF\">        listen 80</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        root /var/www/html</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        index index.php index.html index.htm index.nginx-debian.html</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        server_name example.com</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location / {</span>\n<span style=\"color: #24292EFF\">                try_files $uri $uri/ =404</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\"> \\.php$ {</span>\n<span style=\"color: #24292EFF\">                include snippets/fastcgi-php.conf</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\"> /\\.ht {</span>\n<span style=\"color: #24292EFF\">                deny all</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p>Now enable your new server block by creating a symbolic link from your new server block configuration file in the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/etc/nginx/sites-available/ directory</code> to the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/etc/nginx/sites-enabled/</code> directory:</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo ln -s /etc/nginx/sites-available/spartan /etc/nginx/sites-enabled/</span></code></pre>\n<p>To test your new configuration</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nginx -t</span></code></pre>\n<p>Reload NGINX to make the necessary changes</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo servince nginx restart</span></code></pre>\n<p>To test in the browser, create PHP file wit phpinfo();</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nano /var/www/spartan/test.php </span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">&lt;?php</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #1976D2\">echo</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">phpinfo</span><span style=\"color: #24292EFF\">();</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">?&gt;</span></code></pre>\n<p>It should display the PHP info.</p>\n<h3 id=\"set-up-aws-rds\"><a href=\"#set-up-aws-rds\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set-up AWS RDS</h3>\n<hr>\n<p><a href=\"https://linuxacademy.com/guide/15653-using-aws-rds-with-laravel-october-cms/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://linuxacademy.com/guide/15653-using-aws-rds-with-laravel-october-cms/</a></p>\n<h5 id=\"installing-mysql\"><a href=\"#installing-mysql\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing MySQL</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">apt install php7.4-mysql</span></code></pre>\n<p>Debugging links:</p>\n<p><a href=\"https://stackoverflow.com/questions/41147609/unable-to-start-the-mysql-server-in-ubuntu\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/41147609/unable-to-start-the-mysql-server-in-ubuntu</a></p>\n<p><a href=\"https://stackoverflow.com/questions/37212945/aws-cant-connect-to-rds-database-from-my-machine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/37212945/aws-cant-connect-to-rds-database-from-my-machine</a></p>\n","excerpt":"","description":"","path":"/setting-up-laravel-with-aws-e-c2-and-rds/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"AWS","title":"AWS","path":"/tag/AWS/"},{"id":"RDS","title":"RDS","path":"/tag/RDS/"},{"id":"EC2","title":"EC2","path":"/tag/EC2/"},{"id":"Laravel","title":"Laravel","path":"/tag/Laravel/"}],"author":{"id":"meow","title":"meow","path":"/author/meow/"}}},{"node":{"id":"37faf9e3b7eb1ed17fd6d729486a4985","title":"🤯 TIL: Using Proxy to prevent CORS in Nuxt JS","timeToRead":1,"datetime":"2020-02-21 00:00:00","content":"<p>When integrating API to frontend, I always encounter the error No ‘Access-Control-Allow-Origin’ header, because of CORS Policy (Content-Resource Sharring Policy) by default browser forbid sharing of content by another domain.</p>\n<p>Normally, I make a request to the backend person to allow access control origin on their side</p>\n<p>Native PHP:</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">&lt;?php</span>\n<span style=\"color: #24292EFF\"> </span>\n<span style=\"color: #1976D2\">header</span><span style=\"color: #24292EFF\">(</span><span style=\"color: #22863A\">'Access-Control-Allow-Origin: *'</span><span style=\"color: #24292EFF\">);</span>\n<span style=\"color: #1976D2\">header</span><span style=\"color: #24292EFF\">(</span><span style=\"color: #22863A\">\"Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept\"</span><span style=\"color: #24292EFF\">);</span></code></pre>\n<p>Laravel CORS for Laravel:</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">composer require fruitcake/laravel-cors</span></code></pre>\n<p>Fortunately, there is an option to prevent CORS on Nuxt JS</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">nuxt.config.js</span>\n\n<span style=\"color: #24292EFF\">{</span>\n<span style=\"color: #24292EFF\">  modules: [</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #22863A\">'@nuxtjs/axios'</span>\n<span style=\"color: #24292EFF\">  ],</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">  axios: {</span>\n<span style=\"color: #24292EFF\">    proxy: </span><span style=\"color: #1976D2\">true</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6A737D\">// Can be also an object with default options</span>\n<span style=\"color: #24292EFF\">  },</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">  proxy: {</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #22863A\">'/api/'</span><span style=\"color: #24292EFF\">: </span><span style=\"color: #22863A\">'http://api.example.com'</span><span style=\"color: #24292EFF\">,</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #22863A\">'/api2/'</span><span style=\"color: #24292EFF\">: </span><span style=\"color: #22863A\">'http://api.another-website.com'</span>\n<span style=\"color: #24292EFF\">  }</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p>With that you don't have to bother the backend person to allow access origin.</p>\n","excerpt":"","description":"","path":"/til-using-proxy-to-prevent-cors-in-nuxt-js/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"CORS","title":"CORS","path":"/tag/CORS/"},{"id":"Nuxt JS","title":"Nuxt JS","path":"/tag/Nuxt%20JS/"}],"author":null}},{"node":{"id":"c91b9e72acfda96f8084f4f65ac310de","title":"🔥 TIL: Networking Basics","timeToRead":1,"datetime":"2020-02-10 00:00:00","content":"<p>I had a conversation with a friend about their architectural structure on his work, and he mentioned the word <strong>websocket</strong>. I believe I have encoutered this word many times and I used it on one of my projects but still I don't have the full grasp idea of what is it doing.</p>\n<p>Reference to <a href=\"https://dev.to/iwilsonq/build-real-time-apps-by-learning-websockets-3c9m\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dev.to/iwilsonq/build-real-time-apps-by-learning-websockets-3c9m</a></p>\n<p><strong>Socket</strong> - A <strong>TCP (Transmission Control Protocol) Socket</strong> is and endpint instance defined by the combination of IP address with a port, in the context of either a listening state (a server) or a particular TCP Connection (a client, like your browser).</p>\n<p><strong>TCP Connection</strong> - pairing of two sockets.</p>\n<p><strong>3 main kinds of transports commonly use in browser web apps</strong></p>\n<ul>\n<li><strong>XMLHTTPRequests</strong>, or just HTTP for short. Send a single request and get a single response. These are pretty common</li>\n<li><strong>Server-Sent Events</strong>, or SSE. Send a long-lived request and be able to stream data from the server. Great for real-time data streaming, particularly when the client doesn't need to send messages back to the server.</li>\n<li><strong>WebSockets</strong>, the only transport that allows for bidirectional streaming of text and binary data. We'll dive a little further into it.</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ApzTu2NN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/47j90glrwxk8dv2perdp.png\"></p>\n<p>In most tutorials that deal with external data, you'll deal with the left-most paradigm's HTTP requests. Actually, all of these flows are initiated with an HTTP request, as shown by the blue arrows.</p>\n<p>I don't commonly see articles or tutorials on SSE, but MDN has a good reference in case a one-way data stream sounds intriguing.</p>\n<p>The third flow is most interesting to us - it gives us the ability to communicate with the server over a single long-lived connection.</p>\n<p><strong>Use Cases for websockets</strong></p>\n<ol>\n<li>Social feeds</li>\n<li>Multiplayer Games</li>\n<li>Collaborative Editing/Coding</li>\n<li>Multimedia Chat</li>\n</ol>\n","excerpt":"","description":"","path":"/til-networking-basics/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"Networking","title":"Networking","path":"/tag/Networking/"},{"id":"Websockets","title":"Websockets","path":"/tag/Websockets/"}],"author":null}},{"node":{"id":"62e386980b05143e7fac95fa2d49f0de","title":"🔥 TIL: Versioning / Cache Busting","timeToRead":1,"datetime":"2020-02-10 00:00:00","content":"<p>Normally when I want to see the the changes on my compiled assests, I usually add console.log on JS and change the color of the background on CSS.</p>\n<p>Gladly, I found out that there is method versionon Laravel Mix where it will automatocally append a unique hash to the filenames of all compiled files.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">mix.js('resources/js/app.js', 'public/js')</span>\n<span style=\"color: #24292EFF\">    .version();</span></code></pre>\n<p>Make sure to use the Laravel's gloabal mix function within your views to load the appropriately hashed asset. The mix function will automatically determine the current name of the hashed file:</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">&lt;</span><span style=\"color: #22863A\">script</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">src</span><span style=\"color: #24292EFF\">=</span><span style=\"color: #22863A\">\"{{ mix('/js/app.js') }}\"</span><span style=\"color: #24292EFF\">&gt;&lt;/</span><span style=\"color: #22863A\">script</span><span style=\"color: #24292EFF\">&gt;</span></code></pre>\n<p>See more reference to <a href=\"https://laravel.com/docs/6.x/mix#versioning-and-cache-busting\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://laravel.com/docs/6.x/mix#versioning-and-cache-busting</a></p>\n","excerpt":"","description":"","path":"/til-versioning-cache-busting/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"}],"author":null}},{"node":{"id":"fd2a6a32451e688cf1fcff21755b250f","title":"Different ways to declare Function in JS","timeToRead":1,"datetime":"2020-01-25 00:00:00","content":"<p>This is a collection of learnings from Wes Bos course. 👌</p>\n<p><strong>Regular Function</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Anon or Anonymous Function</strong></p>\n<p>Function without a name.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Function Expression</strong></p>\n<p>Function in a variable name.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Hoisting</strong></p>\n<p>Any function declaration can run before it’s define.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">// Working</span>\n<span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(‘wes’);</span>\n<span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span>\n\n<span style=\"color: #6A737D\">//Not Working</span>\n<span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\">(‘wes’);</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">doctorize</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> (firstname) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`Dr. </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">firstname</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Arrow Function</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">// Regular Declaration</span>\n<span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\">(inches) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> cm </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> cm;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #6A737D\">// Arrow Function Declaration</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (inches) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">// Explicit return </span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6A737D\">// Implicit return, possible to remove the parenthesi if only one parameter</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">inchToCM</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> inches </span><span style=\"color: #D32F2F\">*</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">2.54</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6A737D\">// Implicit return, if more than one parameter</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (a, b </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">3</span><span style=\"color: #24292EFF\">) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> a </span><span style=\"color: #D32F2F\">+</span><span style=\"color: #24292EFF\"> b;</span></code></pre>\n<p><strong>Return an object</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">makeABaby</span><span style=\"color: #24292EFF\">(first, last) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> baby </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">    name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`</span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">first</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\"> </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">last</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">,</span>\n<span style=\"color: #24292EFF\">    age</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">0</span>\n<span style=\"color: #24292EFF\">  }</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> baby;</span>\n<span style=\"color: #24292EFF\">}</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">makeABaby</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> (first, last) </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\">  ({  name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`</span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">first</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\"> </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">last</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">,  age</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">0</span><span style=\"color: #24292EFF\">  })</span></code></pre>\n<p><strong>IIFE - Immediately Invoked Function Expression</strong></p>\n<p>In JS parenthesis runs first by putting parenthesis in the end.</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">(</span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #1976D2\">console</span><span style=\"color: #24292EFF\">.</span><span style=\"color: #1976D2\">log</span><span style=\"color: #24292EFF\">(‘Running the Anon </span><span style=\"color: #1976D2\">Function</span><span style=\"color: #24292EFF\">’)</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> ‘You are cool’;</span>\n<span style=\"color: #24292EFF\">})();</span>\n<span style=\"color: #6A737D\">// If there are any parameters</span>\n<span style=\"color: #24292EFF\">(</span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">(age) {</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">`You are cool </span><span style=\"color: #D32F2F\">${</span><span style=\"color: #24292EFF\">age</span><span style=\"color: #D32F2F\">}</span><span style=\"color: #22863A\">`</span><span style=\"color: #24292EFF\">;</span>\n<span style=\"color: #24292EFF\">})(</span><span style=\"color: #1976D2\">10</span><span style=\"color: #24292EFF\">);</span></code></pre>\n<p><strong>Methods!!! is simply a function that lives inside of an object</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> wes </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">  name</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> ‘wes’,</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">sayHi</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #D32F2F\">function</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #D32F2F\">return</span><span style=\"color: #24292EFF\"> ‘Hey Wes’</span>\n<span style=\"color: #24292EFF\">  },</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">//shorthand</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">yellHi</span><span style=\"color: #24292EFF\">() {</span>\n<span style=\"color: #24292EFF\">    </span><span style=\"color: #1976D2\">console</span><span style=\"color: #24292EFF\">.</span><span style=\"color: #1976D2\">log</span><span style=\"color: #24292EFF\">(‘HEY WESSS’)</span>\n<span style=\"color: #24292EFF\">  },</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6A737D\">// Arrow function</span>\n<span style=\"color: #24292EFF\">  </span><span style=\"color: #6F42C1\">wisperHi</span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> () </span><span style=\"color: #D32F2F\">=&gt;</span><span style=\"color: #24292EFF\"> {</span>\n<span style=\"color: #24292EFF\">    consoles.</span><span style=\"color: #6F42C1\">log</span><span style=\"color: #24292EFF\">(‘hi wess </span><span style=\"color: #D32F2F\">in</span><span style=\"color: #24292EFF\"> a mouse’);</span>\n<span style=\"color: #24292EFF\">  }</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p><strong>Callback Functions</strong></p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #6A737D\">//Click callback</span>\n<span style=\"color: #24292EFF\">&lt;</span><span style=\"color: #22863A\">button</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">class</span><span style=\"color: #24292EFF\">=“clickme”&gt;Click me&lt;/button&gt;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #6F42C1\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\">button</span><span style=\"color: #24292EFF\"> = document.querySelector(‘.clickme’)</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">button.addEventListener(‘click’, wes.yellHi);</span></code></pre>\n<hr>\n","excerpt":"","description":"","path":"/different-ways-to-declare-function-in-js/","cover":"","tags":[{"id":"Today I Learned","title":"Today I Learned","path":"/tag/Today%20I%20Learned/"},{"id":"JS","title":"JS","path":"/tag/JS/"}],"author":{"id":"meow","title":"meow","path":"/author/meow/"}}}]}},"context":{}}