{"hash":"2d0949692f23636720c53b7f3a1168b8c06bb585","data":{"tag":{"id":"Websockets","title":"Websockets","path":"/tag/Websockets/","belongsTo":{"totalCount":1,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"c91b9e72acfda96f8084f4f65ac310de","title":"ðŸ”¥ TIL: Networking Basics","datetime":"2020-02-10 00:00:00","path":"/til-networking-basics/","content":"<p>I had a conversation with a friend about their architectural structure on his work, and he mentioned the word <strong>websocket</strong>. I believe I have encoutered this word many times and I used it on one of my projects but still I don't have the full grasp idea of what is it doing.</p>\n<p>Reference to <a href=\"https://dev.to/iwilsonq/build-real-time-apps-by-learning-websockets-3c9m\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dev.to/iwilsonq/build-real-time-apps-by-learning-websockets-3c9m</a></p>\n<p><strong>Socket</strong> - A <strong>TCP (Transmission Control Protocol) Socket</strong> is and endpint instance defined by the combination of IP address with a port, in the context of either a listening state (a server) or a particular TCP Connection (a client, like your browser).</p>\n<p><strong>TCP Connection</strong> - pairing of two sockets.</p>\n<p><strong>3 main kinds of transports commonly use in browser web apps</strong></p>\n<ul>\n<li><strong>XMLHTTPRequests</strong>, or just HTTP for short. Send a single request and get a single response. These are pretty common</li>\n<li><strong>Server-Sent Events</strong>, or SSE. Send a long-lived request and be able to stream data from the server. Great for real-time data streaming, particularly when the client doesn't need to send messages back to the server.</li>\n<li><strong>WebSockets</strong>, the only transport that allows for bidirectional streaming of text and binary data. We'll dive a little further into it.</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ApzTu2NN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/47j90glrwxk8dv2perdp.png\"></p>\n<p>In most tutorials that deal with external data, you'll deal with the left-most paradigm's HTTP requests. Actually, all of these flows are initiated with an HTTP request, as shown by the blue arrows.</p>\n<p>I don't commonly see articles or tutorials on SSE, but MDN has a good reference in case a one-way data stream sounds intriguing.</p>\n<p>The third flow is most interesting to us - it gives us the ability to communicate with the server over a single long-lived connection.</p>\n<p><strong>Use Cases for websockets</strong></p>\n<ol>\n<li>Social feeds</li>\n<li>Multiplayer Games</li>\n<li>Collaborative Editing/Coding</li>\n<li>Multimedia Chat</li>\n</ol>\n","excerpt":"","description":"","timeToRead":1,"author":null}}]}}},"context":{}}