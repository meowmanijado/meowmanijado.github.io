{"hash":"11b2d22759621e01cdff2459617094ece847867a","data":{"tag":{"id":"EC2","title":"EC2","path":"/tag/EC2/","belongsTo":{"totalCount":1,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"288b475823f665dbb98935a28a023053","title":"Setting up Laravel with AWS EC2 and RDS","datetime":"2020-03-14 00:00:00","path":"/setting-up-laravel-with-aws-e-c2-and-rds/","content":"<p><em>Note: This is not an how to ultimate guide, it's my personal documentation how I manage to set this up and for future cheatsheet.</em></p>\n<h5 id=\"prerequisite\"><a href=\"#prerequisite\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prerequisite</h5>\n<hr>\n<ul>\n<li>AWS Fre Tier account</li>\n<li>Laravel Project Repository</li>\n</ul>\n<h3 id=\"set-up-aws-ec2\"><a href=\"#set-up-aws-ec2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set-up AWS EC2</h3>\n<hr>\n<p>Elastic Compute Cloud or EC2 is basically our vitual computers where we create, launch and terminate the server-instances.</p>\n<ol>\n<li>Create EC2 instance</li>\n<li>Select (Free tier eligible) Ubuntu Server 18.04 LTS (HVM), SSD Volume Type</li>\n<li>Select Next Configure Security Group</li>\n<li>Select Type: HTTP; Port Range 80</li>\n<li>I use key pair for additional security</li>\n</ol>\n<blockquote>\n<p>A key pair consists of a public key that AWS stores, and a private key file that you store. Together, they allow you to connect to your instance securely. For Windows AMIs, the private key file is required to obtain the password used to log into your instance. For Linux AMIs, the private key file allows you to securely SSH into your instance.</p>\n</blockquote>\n<!-- -->\n<blockquote>\n<p>You have to download the private key file (*.pem file) before you can continue. Store it in a secure and accessible location. You will not be able to download the file again after it's created.</p>\n</blockquote>\n<p>Once the instance already created, you can now access the server using ssh</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">ssh ubuntu@1xx.xx.xx.xxx -i </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/document-path-of-pem-file.pem</span></code></pre>\n<h5 id=\"installing-nginx\"><a href=\"#installing-nginx\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing Nginx</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo apt update</span>\n<span style=\"color: #24292EFF\">sudo apt install nginx</span></code></pre>\n<p>Checking web server</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">systemctl status nginx</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">Output</span>\n<span style=\"color: #24292EFF\">● nginx.service - A high performance web server and a reverse proxy server</span>\n<span style=\"color: #24292EFF\">   Loaded: loaded (/lib/systemd/system/nginx.service</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> enabled</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> vendor preset: enabled)</span>\n<span style=\"color: #24292EFF\">   Active: active (running) since Fri 2018-04-20 16:08:19 UTC</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> 3 days ago</span>\n<span style=\"color: #24292EFF\">     Docs: man:nginx(8)</span>\n<span style=\"color: #24292EFF\"> Main PID: 2369 (nginx)</span>\n<span style=\"color: #24292EFF\">    Tasks: 2 (limit: 1153)</span>\n<span style=\"color: #24292EFF\">   CGroup: /system.slice/nginx.service</span>\n<span style=\"color: #24292EFF\">           ├─2369 nginx: master process /usr/sbin/nginx -g daemon on</span><span style=\"color: #D32F2F\">;</span><span style=\"color: #24292EFF\"> master_process on</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">           └─2380 nginx: worker process</span></code></pre>\n<p>Now Nginx appears starterd successfully.</p>\n<p>To check on the browser, call the public IP address that you can get on the instance page, then you can see the Welcome to NGINX!</p>\n<p>For more detailed instruction I followed this tutorial:</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04</a></p>\n<p>✏️ <em>Note to self: Write Nginx cheatsheet for my future self!</em></p>\n<h5 id=\"installing-php\"><a href=\"#installing-php\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing PHP</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo apt install php-fpm php-mysql</span>\n<span style=\"color: #24292EFF\">sudo apt install php7.4-mbstring php7.4-xmlrpc php7.4-soap php7.4-gd php7.4-xml php7.4-cli php7.4-zip</span></code></pre>\n<h5 id=\"configure-ssh\"><a href=\"#configure-ssh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure SSH</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">$ ssh-key-gen</span>\n<span style=\"color: #24292EFF\">$ cat </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\">/.ssh/id_rsa.pub</span></code></pre>\n<p>Other resources I followed to set-up SSH:</p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604</a></p>\n<p><a href=\"https://help.github.com/en/github/authenticating-to-github/error-permission-denied-publickey\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://help.github.com/en/github/authenticating-to-github/error-permission-denied-publickey</a></p>\n<h5 id=\"installing-composer\"><a href=\"#installing-composer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing composer</h5>\n<p><a href=\"https://linuxize.com/post/how-to-install-and-use-composer-on-ubuntu-18-04/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://linuxize.com/post/how-to-install-and-use-composer-on-ubuntu-18-04/</a></p>\n<h5 id=\"configuring-nginx-to-use-the-php-processor\"><a href=\"#configuring-nginx-to-use-the-php-processor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configuring Nginx to Use the PHP Processor</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nano /etc/nginx/sites-available/spartan</span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">server {</span>\n<span style=\"color: #24292EFF\">        listen 80</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        root /var/www/html</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        index index.php index.html index.htm index.nginx-debian.html</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        server_name example.com</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location / {</span>\n<span style=\"color: #24292EFF\">                try_files $uri $uri/ =404</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\"> \\.php$ {</span>\n<span style=\"color: #24292EFF\">                include snippets/fastcgi-php.conf</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">        location </span><span style=\"color: #D32F2F\">~</span><span style=\"color: #24292EFF\"> /\\.ht {</span>\n<span style=\"color: #24292EFF\">                deny all</span><span style=\"color: #D32F2F\">;</span>\n<span style=\"color: #24292EFF\">        }</span>\n<span style=\"color: #24292EFF\">}</span></code></pre>\n<p>Now enable your new server block by creating a symbolic link from your new server block configuration file in the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/etc/nginx/sites-available/ directory</code> to the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/etc/nginx/sites-enabled/</code> directory:</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo ln -s /etc/nginx/sites-available/spartan /etc/nginx/sites-enabled/</span></code></pre>\n<p>To test your new configuration</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nginx -t</span></code></pre>\n<p>Reload NGINX to make the necessary changes</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo servince nginx restart</span></code></pre>\n<p>To test in the browser, create PHP file wit phpinfo();</p>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">sudo nano /var/www/spartan/test.php </span></code></pre>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">&lt;?php</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #1976D2\">echo</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">phpinfo</span><span style=\"color: #24292EFF\">();</span>\n<span style=\"color: #24292EFF\">​</span>\n<span style=\"color: #24292EFF\">?&gt;</span></code></pre>\n<p>It should display the PHP info.</p>\n<h3 id=\"set-up-aws-rds\"><a href=\"#set-up-aws-rds\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set-up AWS RDS</h3>\n<hr>\n<p><a href=\"https://linuxacademy.com/guide/15653-using-aws-rds-with-laravel-october-cms/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://linuxacademy.com/guide/15653-using-aws-rds-with-laravel-october-cms/</a></p>\n<h5 id=\"installing-mysql\"><a href=\"#installing-mysql\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing MySQL</h5>\n<pre class=\"shiki\" style=\"background-color: #ffffff\"><code><span style=\"color: #24292EFF\">apt install php7.4-mysql</span></code></pre>\n<p>Debugging links:</p>\n<p><a href=\"https://stackoverflow.com/questions/41147609/unable-to-start-the-mysql-server-in-ubuntu\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/41147609/unable-to-start-the-mysql-server-in-ubuntu</a></p>\n<p><a href=\"https://stackoverflow.com/questions/37212945/aws-cant-connect-to-rds-database-from-my-machine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/37212945/aws-cant-connect-to-rds-database-from-my-machine</a></p>\n","excerpt":"","description":"","timeToRead":3,"author":{"id":"meow","title":"meow","path":"/author/meow/"}}}]}}},"context":{}}